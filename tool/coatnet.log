nohup: ignoring input
/home/jeongho/dir/NIA/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: 'libpng16.7f72a3c5.so.16: cannot open shared object file: No such file or directory'If you don't plan on using image functionality from `torchvision.io`, you can ignore this warning. Otherwise, there might be something wrong with your environment. Did you have `libjpeg` or `libpng` installed before building `torchvision` from source?
  warn(
/home/jeongho/dir/NIA/torchvision/__init__.py:25: UserWarning: You are importing torchvision within its own root folder (/home/jeongho/dir/NIA). This is not expected to work and may give errors. Please exit the torchvision project source and relaunch your python interpreter.
  warnings.warn(message.format(os.getcwd()))
/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/functional.py:512: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3587.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[92mResuming......checkpoint/v1.0/class/coatnet/save_model/dryness[0m
Traceback (most recent call last):
  File "main.py", line 290, in <module>
    main(args)
  File "main.py", line 206, in main
    model_list[path] = resume_checkpoint(
  File "/home/jeongho/dir/NIA/tool/utils.py", line 26, in resume_checkpoint
    state_dict = torch.load(path, map_location=device)
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 1025, in load
    return _load(opened_zipfile,
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 1446, in _load
    result = unpickler.load()
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 1416, in persistent_load
    typed_storage = load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 1390, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 1316, in restore_location
    return default_restore_location(storage, str(map_location))
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 390, in default_restore_location
    result = fn(storage, location)
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/serialization.py", line 270, in _cuda_deserialize
    return obj.cuda(device)
  File "/home/jeongho/miniconda3/envs/NIA/lib/python3.8/site-packages/torch/_utils.py", line 114, in _cuda
    untyped_storage = torch.UntypedStorage(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 
